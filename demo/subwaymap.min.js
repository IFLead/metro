!function(t){"use strict";function e(){function e(e,n,i,a,o){function s(e){var n=d[e];return t.isDefined(n)?n:{}}function l(){c.resolve(),e.disabledStations=t.isDefined(e.disabledStations)?e.disabledStations:[],t.forEach(r,function(n){var i=t.isDefined(e.enabledStations);d[n]={isActive:!1,isDisabled:i?-1==e.enabledStations.indexOf(n):-1!=e.disabledStations.indexOf(n)}})}var r,c,c=o.defer(),u=this,d={};r=i[0].querySelectorAll("[subway-station-name]"),r=[].map.call(r,function(t){return t.attributes["subway-station-name"].nodeValue}),l(),u.onSelectStation=function(t,n){e.onSelect(t,n)},u.findStation=s}function n(t,e){e.css("position","relative")}return e.$inject=["$scope","$http","$element","$attrs","$q"],{restrict:"AE",replace:!1,transclude:!0,controller:e,controllerAs:"subwayMap",link:n,templateUrl:function(t,e){return e.mapUrl||"./metro.svg"},scope:{disabledStations:"=?",enabledStations:"=?",onSelect:"=?"}}}function n(){function t(t,e,n,i){function a(){l=n.subwayStationName,e.bind("click",s);var i=r.findStation(l);i&&(t.data=i,c&&c.registerStation(l,i),t.$watch("data.isDisabled",function(t){e.toggleClass("disabled",t)}))}function o(){for(var t,n,i,a=e.find("circle"),o=a.length-1;o>=0;o--)if(a.eq(o).hasClass("subway-point")){t=a[o],i=t.getBoundingClientRect();break}return n=window.document.body.getBoundingClientRect(),i?{top:i.top-n.top,left:i.left-n.left}:null}function s(){t.data.isDisabled||r.onSelectStation([l],o()),!t.data.isDisabled&&r.multiple&&(t.data.isActive=!t.data.isActive)}var l,r=i[1],c=i[0];a()}return{require:["?^subwayStationGroup","^subwayMap"],restrict:"A",link:t,scope:{}}}function i(){function e(t){t.stations={},t.main="",this.registerStation=function(e,n){t.stations[e]=n,t.main=e}}function n(e,n,i,a){function o(){var n=!0;return t.forEach(e.stations,function(t){t.isDisabled===!1&&(n=!1)}),n}e.$watch(o,function(t){n.toggleClass("disabled",t)}),n.find("text").bind("click",function(t){var n=[];if(!o()){for(var i in e.stations)i.isDisabled||n.push(i);var s=t.target.getBoundingClientRect(),l=window.document.body.getBoundingClientRect();a.onSelectStation(n,{top:s.top-l.top,left:s.left-l.left})}})}return e.$inject=["$scope","$element"],{restrict:"A",link:n,require:"^subwayMap",controller:e,replace:!1,scope:{}}}t.module("dvhbSubwayMap",[]),t.module("dvhbSubwayMap").directive("subwayMap",e),t.module("dvhbSubwayMap").directive("subwayStationName",n),t.module("dvhbSubwayMap").directive("subwayStationGroup",i)}(angular);